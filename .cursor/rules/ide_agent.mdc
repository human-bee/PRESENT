---
description: 
globs: 
alwaysApply: true
---
# IDE Agent Rule: LiveKit + Agent-JS + Tambo UI Project

## Overview
This rule provides a step-by-step approach for a coding IDE agent to contribute to the LiveKit + OpenAI Agent-JS + Tambo UI project, regardless of when they join (from scratch, mid-way, or at the end). It ensures the agent can:
- Start with zero context and ramp up quickly
- Jump in mid-way (with or without context)
- Verify that the implementation matches requirements at the end
- Always follow the 'always works' iterative development ethos

## 1. **Onboarding: Starting with Zero Context**
- **Read the PRD**: `.taskmaster/docs/prd.txt` for project goals and MVP features
- **Review Task List**: `.taskmaster/tasks/tasks.json` for current and completed tasks
- **Check Task Status**: Use Taskmaster tools to see what is pending, in-progress, or done
- **Understand Core Technologies**:
  - LiveKit (room, participant, audio/video streaming)
  - OpenAI Agent-JS SDK (agent orchestration, tool calling)
  - Tambo UI (component surfacing, tool invocation)
- **Locate Entry Points**:
  - LiveKit backend: `livekit-backend/`
  - Tambo UI: `src/components/`, `src/app/`
  - Agent logic: (to be implemented, see tasks)

## 2. **Jumping In Mid-Way (No Context)**
- **Repeat Onboarding Steps** above
- **Check Recent Commits/Task Updates**: Review recent changes in `.taskmaster/tasks/` and codebase
- **Identify Current Task**: Use Taskmaster's `next_task` or check which task is 'in-progress'
- **Ask for or Discover Context**: If context is missing, search for recent implementation notes, comments, or use Taskmaster's subtask logs

## 3. **Jumping In Mid-Way (With Some Context)**
- **Review Provided Context**: Read any notes, chat logs, or subtask updates
- **Validate Context**: Cross-check with `.taskmaster/tasks/tasks.json` and PRD to ensure alignment
- **Continue Iterative Development**: Always ensure the system works after each change; test before moving to the next step

## 4. **End-of-Project Verification**
- **Verify All Tasks Are Complete**: All tasks in `.taskmaster/tasks/tasks.json` should be 'done' and test strategies met
- **Run End-to-End Tests**: Join a LiveKit room, speak a trigger phrase, verify Tambo UI component appears
- **Check Documentation**: Ensure setup, usage, and debugging docs are present and accurate
- **Review Code for Robustness**: Confirm error handling, logging, and extensibility
- **Confirm 'Always Works' Principle**: The system should function at every step, with clear rollback or debug paths if something fails

## 5. **General Best Practices**
- **Iterative, Testable Steps**: Never add complexity until the basics work
- **Minimal, Working MVP First**: Only enhance after verifying each layer
- **Context Discovery**: Proactively search for missing context in code, tasks, and docs
- **Clear Logging and Comments**: Leave notes for future agents/humans
- **Use Taskmaster for Task Tracking**: Update task status and details as you work

## 6. **References**
- PRD: `.taskmaster/docs/prd.txt`
- Tasks: `.taskmaster/tasks/tasks.json`
- LiveKit Backend: `livekit-backend/`
- Tambo UI: `src/components/`, `src/app/`
- Agent Logic: (to be implemented)
- Taskmaster Rules: `.cursor/rules/`

---
**This rule ensures any agent can join, contribute, or verify this project at any stage, always keeping the system working and context clear.**
